*bullets.txt*  Automated Bullet Lists in Vim

Author: Dorian Karter <https://doriankarter.com>
License: MIT (see LICENSE.md in https://github.com/dkarter/bullets.vim)

TABLE OF CONTENTS                         *bullets-toc*

|bullets-intro|                    Introduction and feature summary
|bullets-commands|                 General Commands
|bullets-configuration|            Configuration
|bullets-insert-new-bullet|        Inserting Bullets
|bullets-indenting|                Indenting Bullets
|bullets-checkboxes|               Gfm Markdown Checkboxes
|bullets-mappings|                 Mappings


INTRODUCTION                                *bullets* *bullets-intro*

Bullets.vim is a plugin allowing automated (as in auto completing and auto
incrementing) bulleted lists in Vim. It is designed to closely emulate the
experience of working with a familiar word processor which presents the user
with the next bulleted item after completing a bullet point and pressing
the enter key, leaving the user focused on what they need to write.

Out of the box bullets.vim comes with built in support for the following list
types:

- Hyphenated lists
* Star (or bullet) lists
. Dot lists
- [ ] GFM markdown checkbox lists
1. Numeric lists
2) or this style of numeric lists
\item latex item lists
**** Org mode headers

It also provides support for wrapped text in a bullet, allowing you to use the
`textwidth` feature in Vim seamlessly.

Future versions aim to support the following:

a. Alphabetic lists
]] User defined bullets


GENERAL COMMANDS                            *bullets-commands*

                                            *bullets-:SelectCheckbox*
:SelectCheckbox        Visually selects the checkbox related to the current
                       item the cursor is on (works only in normal mode)

                                            *bullets-:SelectCheckboxInside*
:SelectCheckboxInside  Visually selects the contents of a checkbox related to
                       the current item the cursor is on (works only in normal
                       mode)

                                            *bullets-:ToggleCheckbox*
:ToggleCheckbox        Places an x in the nearest checkbox to the cursor on
                       the current line if it is unchecked. If the checkbox is
                       already checked, it removes the x from the checkbox.

                                            *bullets-:SelectBulletText*
:SelectBulletText      Selects the text of a bullet list item without the
                       bullet.

                                            *bullets-:SelectBullet*
:SelectBullet          Selects the bullet list item including the bullet.

                                            *bullets-:InsertNewBullet*
:InsertNewBullet       This is the command being used when you press <CR> in
                       INSERT mode or `o` in normal mode. It adds the next
                       bullet list item based on the one in the current line.

                                            *bullets-:RenumberSelection*
:RenumberSelection     Renumbers all the arabic/numeric bullets lines in the
                       visual selection. Right padding is initalized to the
                       first found bullet.

CONFIGURATION                               *bullets-configuration*

File types
----------
You can choose which file types this plugin will work on:

>
  let g:bullets_enabled_file_types = ['markdown', 'text', 'gitcommit']
>

Above are the defaults, but feel free to add or modify this list to suit your
needs. Just add above to your .vimrc.

To check the type of the current file type `:set ft` into the vim command
line.


Enable in empty buffers
-----------------------
bullets.vim is enabled in new empty buffers by default (buffers created with
`:new` for example) to disable this feature add the following to your .vimrc:

  `let g:bullets_enable_in_empty_buffers = 1`


Disable mappings
----------------
To disable default mappings add the following to your .vimrc:

>
  let g:bullets_set_mappings = 0
>

Now you can use the provided |bullets-commands| to define your own mappings.


Enable AsciiDoc bullet indenting
--------------------------------
To enable support for indenting AsciiDoc lists, add the following to your
.vimrc (init.vim):

>
  let g:bullets_enable_ascii_indent = 1
<

This will map to <CTRL-t>, <CTRL-d> in insert mode and `>>`, `<<` in normal
mode. It will have no effect outside of AsciiDoc lists, maintaining default Vim
behaviour.

You can provide your own mappings to this function by making a list in .vimrc.

Example: >
  let g:bullets_enable_ascii_indent = ['<F3>','<F4>','<F5>','<F6>']

Items in list set in order: insert mode indent, insert mode deindent, normal
mode indent and normal mode deindent.

If you want AsciiDoc list indenting enabled only in insert mode, leave last two
items as `''`.


Leader key prefix
-----------------
To add a leader key to all mappings set the following:

>
  let g:bullets_mapping_leader = "\<Space>"

This will set the <space> key as leader to all default mappings.


Disabling empty bullet deletion
-------------------------------
By default bullets.vim will delete trailing empty bullets when the return key
is pressed, just like modern word processors.

If you would like to turn this feature off add the following to your .vimrc

  `let g:bullets_delete_last_bullet_if_empty = 0`


Maintain right padding on bullets
---------------------------------
By default bullets.vim will try to pad bullets with enough spaces to align a
new bullet's _text_ part with the previous line.

  `let g:bullets_pad_right = 0`
  1.  two spaces after the bullet
  2.  same here
  ...
  9.  and here
  10. text stays aligned
  ...
  99. and here
  100. shifts over a column

This tends to be fine even if you don't use it, but it can be disabled with:

  `let g:bullets_pad_right = 0`


INSERTING BULLETS                           *bullets-insert-new-bullet*

When a supported file type is opened (see |bullets-configuration|) you can start
a bullet list by typing the first member of a supported bullet list type (see
|bullets|).

Pressing the <CR> key in insert mode at the end of a bullet list item will
insert the next bullet.

Pressing the <CR> key when a bullet is empty (e.g. `- `) will start a new line
and erase the empty bullet.

In normal mode you may press `o` to open a new line which will also create the
next bullet list item and put the cursor right after it.


INDENTING BULLETS                           *bullets-indenting*

Vim comes built in with support for indenting and de-indenting in INSERT mode.

To indent the current bullet to the right: from insert mode press <CTRL-t>.
To indent the current bullet to the left: from insert mode press <CTRL-d>.

Note: For <CTRL-d> to work properly you have to be at the end of the line.

For more information `:h i_CTRL-T` and `:h i_CTRL-D`


GFM MARKDOWN CHECKBOXES                     *bullets-checkboxes*

Bullets.vim supports checking and unchecking GFM markdown checkboxes. While in
normal mode, move over a checkbox list item (anywhere on the item) and use
<leader>x to toggle the checkbox state.

There are also |bullets-commands| that you can use to to create your own mappings.


MAPPINGS                                    *bullets-mappings*

To disable the default mappings see |bullets-configuration|.

INSERT MODE


                                            *bullets-i_<cr>*
<CR>        Inserts a new bullet list item based on the current line bullet
            format. This is a local mapping and will only affect the current
            buffer if it has a supported file type (see |bullets-configuration|).

                                            *bullets-i_<C-cr>*
<C-CR>      Same as <CR>, in case you want to unmap <CR> in INSERT MODE.

NORMAL MODE

                                            *bullets-o*
o           Inserts a new bullet list item. Same as <CR> in INSERT MODE.

                                            *bullets-<leader>x*
<leader>x   Toggles the checkbox on the current line.

VISUAL MODE

                                            *bullets-v_gN*
gN          Renumbers selected bullet list items.

OPERATOR-PENDING MODE

                                            *bullets-ab*
ab          "a bullet block", select a bullet block, including the bullet
            leader.

                                            *bullets-ib*
ib          "inner bullet block", select a bullet block, excluding the bullet
            leader.

                                            *bullets-ac*
ac          "a checkbox block", select a checkbox block, including the '[' and
            ']'.

                                            *bullets-ic*
ic          "inner checkbox block", select a checkbox block, excluding the '['
            and ']'.



vim:tw=78:et:ft=help:norl:
